# -*- coding: utf-8 -*-
"""0920_2115_한예준

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17SSdubK0wkqZJukv5SulA2OYrXD9Yv4b
"""

import numpy as np
from sympy import *
import sympy as sy

temp = np.array( [ 2.5, 5, 7.5, 10 ])
ice = np.array( [8.5, 10.5, 13.5, 27.5] )

x = symbols('x')

fx = 2*x + 2.5
fx2 = 2.4*x

fx_y = []
fx2_y = []

for i in range( len(temp ) ) :
  fx_y.append(  fx.subs( x, temp[i] ) )
  fx2_y.append(  fx2.subs( x, temp[i] ) )

print( fx_y )
print( fx2_y )

r1 = (1/4)*np.sum( ( ice - np.array(fx_y) )**2 )
r2 = (1/4)*np.sum( ( ice - np.array(fx2_y) )**2 )

print( 'fx : %.2f, fx2 : %.2f'%(r1, r2 ) )

import numpy as np
from sympy import *
import sympy as sy

temp = np.array([5, 10, 15, 20])
harvest = np.array([16, 23, 31, 50])

a = symbols('a')
b = symbols('b')

fx = sum((harvest - (a*temp + b))**2)

derivatived_a = Derivative(fx, a).doit()
derivatived_b = Derivative(fx, b).doit()

result = solve((derivatived_a, derivatived_b), dict=True)
x = symbols('x')
fx2 = float(result[0][a])*x + float(result[0][b])

print(sy.simplify(fx))
pprint(derivatived_b)
pprint(derivatived_a)
print(result)
pprint(fx2)

from sklearn.linear_model import LinearRegression
import pandas as pd
import matplotlib.pyplot as plt

data = pd.DataFrame({"temperature": [5, 10, 15, 20], "harvest": [16, 23, 31, 50]})
print(data)

x = data['temperature'].values.reshape(-1, 1)
y = data['harvest']

lineFit = LinearRegression()
lineFit.fit(x, y)

predicted = lineFit.predict(x)

print('기울기:', lineFit.coef_[0])
print('절편:', lineFit.intercept_)

plt.scatter(x, y)
plt.plot(x, predicted, color='orange')
plt.legend()
plt.show()